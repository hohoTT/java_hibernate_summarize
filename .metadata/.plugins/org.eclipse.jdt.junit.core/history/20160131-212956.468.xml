<?xml version="1.0" encoding="UTF-8"?><testrun name="HibernateText.testUpadte" project="hibernate_session" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testcase name="testUpadte" classname="com.wt.hibernate.entity.HibernateText" time="2.997">
    <error>org.hibernate.NonUniqueObjectException: a different object with the same identifier value was already associated with the session: [com.wt.hibernate.entity.News#1]&#13;
	at org.hibernate.engine.internal.StatefulPersistenceContext.checkUniqueness(StatefulPersistenceContext.java:697)&#13;
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performUpdate(DefaultSaveOrUpdateEventListener.java:296)&#13;
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsDetached(DefaultSaveOrUpdateEventListener.java:241)&#13;
	at org.hibernate.event.internal.DefaultUpdateEventListener.performSaveOrUpdate(DefaultUpdateEventListener.java:55)&#13;
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)&#13;
	at org.hibernate.internal.SessionImpl.fireUpdate(SessionImpl.java:786)&#13;
	at org.hibernate.internal.SessionImpl.update(SessionImpl.java:778)&#13;
	at org.hibernate.internal.SessionImpl.update(SessionImpl.java:774)&#13;
	at com.wt.hibernate.entity.HibernateText.testUpadte(HibernateText.java:81)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
  </testcase>
</testrun>
